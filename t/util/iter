#!/bin/bash

$r_ _ sys

verbose() {
    [[ 0 -eq 1 ]]
}

subdir_iter() {
    local cur_dir="$1"
    local sub_dirs=()
    if [[ "$cur_dir" =~ .*RECYCLE\.BIN.* || "$cur_dir" =~ .*System\ Volume.* || "$cur_dir" =~ \.Trash.* ]]; then
        return
    fi
    if [[ "$cur_dir" = "$location" ]]; then
        t_subpath=''
    else
        t_subpath="${cur_dir##$location\/}"
    fi
    ((cur_depth++))
    move_dir_etc_to=""
    for sub_path in "$cur_dir"/*; do
        if [[ $stop -eq 1 ]]; then
            return
        fi
        if [[ -d "$sub_path" ]]; then
            if [[ $cur_depth -le $max_depth ]]; then
                sub_dirs+=("$sub_path")
            else
                echo "sub_iter stopped at max depth, sub_path: $sub_path"
            fi
        elif [[ -f "$sub_path" ]]; then
            ((iter_count++))
            $funct "$sub_path"
        fi
    done
    if [[ -n "$move_dir_etc_to" ]]; then
        for sub_path in "$cur_dir"/*; do
            if [[ -f "$sub_path" && "$sub_path" =~ \.srt|\.png|\.jpg|\.txt ]]; then
                mv "$sub_path" "$move_dir_etc_to"
            fi
            if [[ -d "$sub_path" && "$sub_path" =~ \.[eE]xtra|[sS]ubtitle ]]; then
                mv "$sub_path" "$move_dir_etc_to"
            fi
        done
    fi
    for sub_dir in "${sub_dirs[@]}"; do
        if [[ $stop -eq 1 ]]; then
            return
        fi
        verbose && echo "subdir_iter \"$sub_dir\""
        subdir_iter "$sub_dir"
    done
    ((cur_depth--))
}

iter() {
    shopt -s dotglob
    if [[ $# -lt 1 ]]; then
        echo "Usage: iter ?base_dir function_name "
        return
    fi

    if [[ $# -lt 2 ]]; then
        local cur_dir="$(pwd)"
        funct="$1"
        shift
    else
        if [[ -d "$1" ]]; then
            local cur_dir="$1"
            funct="$2"
            shift 2
        else
            funct="$1"
            if [[ ! -d "$2" ]]; then
                echo "Usage: iter ?base_dir function_name (multiple args that aren't dirs)"
                exit
            fi
            local cur_dir="$2"
            shift 2
        fi
    fi

    cur_dir=$(path_to_lin "$cur_dir")
    # echo "cur_dir: $cur_dir"
    # return

    # [[ -d /c/Windows ]] && {
    #     cur_dir=$(repath $cur_dir)
    # }

    # echo "cur_dir: $cur_dir"
    # return
    sub_dirs=()
    echo "iter start $cur_dir"
    # if [[ "$cur_dir" = "$location" ]]; then
    #     t_subpath=''
    # else
    #     t_subpath="${cur_dir##$location\/}"
    # fi
    max_depth=8
    cur_depth=0
    for a_path in "$cur_dir"/*; do
        if [[ -d "$a_path" ]]; then
            sub_dirs+=("$a_path")
        elif [[ -f "$a_path" ]]; then
            $funct "$a_path"
        fi
    done
    for sub_dir in "${sub_dirs[@]}"; do
        if [[ $stop -eq 1 ]]; then
            stop=0
            return
        fi
        verbose && echo "subdir_iter \"$sub_dir\""
        subdir_iter "$sub_dir"
    done
}
